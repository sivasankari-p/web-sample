{"version":3,"sources":["assets/uber-eats-logo.png","assets/eats-logo.png","constants/demo.ts","reducers/demoReducer.ts","reducers/WindowReducer.ts","reducers/index.ts","constants/windowConstants.ts","services/demo.ts","actions/demo.ts","saga/index.ts","store.ts","interceptors/index.ts","containers/RestaurantDetail/Rating.tsx","containers/RestaurantDetail/RestaurantHeader.tsx","containers/RestaurantDetail/Breadcrumb.tsx","containers/RestaurantMenu/MenuItem.tsx","containers/RestaurantMenu/MenuCategory.tsx","containers/RestaurantMenu/index.tsx","containers/Cart/Counter.tsx","containers/Cart/CartItem.tsx","containers/Cart/index.tsx","containers/RestaurantDetail/TabContent.tsx","containers/RestaurantDetail/TabRouter.tsx","containers/RestaurantDetail/index.tsx","containers/AppHeader/index.tsx","actions/windowAction.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","FETCH_TODO","TODO_KEYS","initialState","loading","todo","error","WINDOW_REDUCER_KEYS","isWindowSmall","window","outerWidth","isWindowMedium","STORE_KEYS","combineReducers","todoStore","state","action","type","response","length","windowStore","payload","width","DemoService","fetchTodos","axios","method","url","fetchTodoSuccess","fetchTodoError","console","log","call","put","data","takeLatest","middlewares","sagaMiddleware","createSagaMiddleware","push","enhancers","applyMiddleware","createStore","reducer","run","saga","Rating","props","color","value","className","style","borderColor","label","connect","store","Fragment","src","img","alt","restaurantName","location","onClick","rating","speed","flavor","offer","info","one","two","three","id","Breadcrumb","MenuItem","item","name","description","rate","MenuCategory","category","items","map","menu","RestaurantMenu","Counter","currentCount","CartItem","quantity","onChange","price","cartItems","Cart","cartItem","hideCart","exact","path","to","TabRouter","activeClassName","DETAIL","isUserFavorite","resizeWindow","windowResize","useEffect","addEventListener","removeEventListener","mobileLogo","fullLogo","baseUrl","process","BASE_URL","defaults","baseURL","headers","common","interceptors","request","use","config","Promise","reject","Error","status","setupInterceptors","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.34c08479.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/uber-eats-logo.4af7f50c.png\";","module.exports = __webpack_public_path__ + \"static/media/eats-logo.8d0b5d4b.png\";","export const FETCH_TODO = \"FETCH_TODO\";\nexport const FETCH_TODO_SUCCESS = \"FETCH_TODO_SUCCESS\";\nexport const FETCH_TODO_ERROR = \"FETCH_TODO_ERROR\";\n","import {FETCH_TODO, FETCH_TODO_ERROR, FETCH_TODO_SUCCESS} from \"../constants/demo\";\n\nexport const TODO_KEYS = {\n    LOADING: \"loading\",\n    TODO_LIST: \"todo\",\n    ERROR: \"error\",\n};\n\n\nexport interface TodoStoreInterface {\n    loading: boolean,\n    todo: object[],\n    error: { [key: string]: any },\n}\n\n\nconst initialState: TodoStoreInterface = {\n    loading: false,\n    todo: [],\n    error: {},\n};\n\nexport default (state = initialState, action: any): TodoStoreInterface => {\n    switch (action.type) {\n        case FETCH_TODO:\n            return { ...state, [TODO_KEYS.LOADING]: true, [TODO_KEYS.TODO_LIST]: [] };\n        case FETCH_TODO_SUCCESS:\n            return { ...state, [TODO_KEYS.LOADING]: false, [TODO_KEYS.TODO_LIST]: action.response.length };\n        case FETCH_TODO_ERROR:\n            return { ...state, [TODO_KEYS.LOADING]: false, [TODO_KEYS.TODO_LIST]: [], [TODO_KEYS.ERROR]: action.error };\n        default:\n            return state;\n    }\n};\n","import {WINDOW_RESIZE} from \"../constants/windowConstants\";\n\nexport const WINDOW_REDUCER_KEYS = {\n    IS_WINDOW_SMALL: \"isWindowSmall\",\n    IS_WINDOW_MEDIUM: \"isWindowMedium\",\n};\n\n\nexport interface IWindowReducer {\n    isWindowSmall: boolean,\n    isWindowMedium: boolean\n}\n\n\nconst initialState: IWindowReducer = {\n    isWindowSmall: window.outerWidth < 650,\n    isWindowMedium: window.outerWidth >= 650 && window.outerWidth< 950\n};\n\nexport default (state = initialState, action: any): IWindowReducer => {\n    switch (action.type) {\n        case WINDOW_RESIZE:\n            return { ...state,\n                [WINDOW_REDUCER_KEYS.IS_WINDOW_SMALL]: action.payload.width < 650,\n                [WINDOW_REDUCER_KEYS.IS_WINDOW_MEDIUM]: action.payload.width >= 650\n                && action.payload.width < 950\n            };\n        default:\n            return state;\n    }\n};\n","import { combineReducers } from \"redux\";\nimport demoReducer, { TodoStoreInterface, TODO_KEYS } from \"./demoReducer\";\nimport windowReducer, {IWindowReducer, WINDOW_REDUCER_KEYS} from \"./WindowReducer\";\n\nexport const STORE_KEYS = {\n    TODO_STORE: \"todoStore\",\n    WINDOW_STORE: \"windowStore\"\n};\n\nexport interface StoreInterface {\n    todo: TodoStoreInterface,\n    window: IWindowReducer\n}\n\nexport {\n    TODO_KEYS,\n    WINDOW_REDUCER_KEYS\n};\n\nexport default combineReducers({\n    todoStore: demoReducer,\n    windowStore: windowReducer\n});\n\n\n\n","export const WINDOW_RESIZE = \"APP/WINDOW_RESIZE\";\n","import axios from \"axios\";\n\nclass DemoService {\n    static fetchTodos = () => axios({\n        method: \"get\",\n        url: \"/todos\",\n    });\n}\n\nexport default DemoService;\n","import {FETCH_TODO, FETCH_TODO_ERROR, FETCH_TODO_SUCCESS} from \"../constants/demo\";\nimport {ActionInterface} from \"./action\";\n\nexport const fetchTodos = (count = 0): ActionInterface => ({\n    type: FETCH_TODO,\n    count,\n});\n\nexport const fetchTodoSuccess = (response: object): ActionInterface => ({\n    type: FETCH_TODO_SUCCESS,\n    response,\n});\n\nexport const fetchTodoError = (error: object): ActionInterface => ({\n    type: FETCH_TODO_ERROR,\n    error,\n});\n","import { takeLatest, put, call } from \"redux-saga/effects\";\nimport DemoService from \"../services/demo\";\nimport {FETCH_TODO} from \"../constants/demo\";\nimport {ActionInterface} from \"../actions/action\";\nimport {fetchTodoError, fetchTodoSuccess} from \"../actions/demo\";\n\nfunction* fetchTodos(action: ActionInterface) {\n    try {\n        console.log(\"FETCHING TODO_LIST :: \", action);\n        const response = yield call(DemoService.fetchTodos);\n        console.log(\"FETCHING RESPONSE :: \", response);\n        yield put(fetchTodoSuccess(response.data));\n    } catch (error) {\n        console.log({ error });\n        yield put(fetchTodoError(error));\n    }\n}\n\nexport default function* () {\n    yield takeLatest(FETCH_TODO, fetchTodos);\n}\n","import {applyMiddleware, createStore} from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport reducer from \"./reducers\";\nimport saga from \"./saga\";\n\nconst middlewares = [];\nconst sagaMiddleware = createSagaMiddleware();\n\nmiddlewares.push(sagaMiddleware);\nconst enhancers = [];\nenhancers.push(applyMiddleware(...middlewares));\n\nexport default createStore(reducer, ...enhancers);\nsagaMiddleware.run(saga);\n","import axios from \"axios\";\n\nexport const setBaseUrl = (baseUrl: string) => {\n    axios.defaults.baseURL = baseUrl;\n};\n\nexport const setAuthToken = (token: string) => {\n    // axios.defaults.headers.common[TOKEN_KEY] = token;\n};\n\nexport const setupInterceptors = () => {\n    // @ts-ignore\n    setBaseUrl(process.env.BASE_URL);\n    axios.defaults.headers.common[\"Content-type\"] = \"application/json\";\n\n    // Add a request interceptor\n    axios.interceptors.request.use(\n        config => {\n            // Do something before request is sent\n            return config;\n        },\n        error => {\n            // Do something with request error\n            return Promise.reject(error);\n        }\n    );\n\n    // Add a response interceptor\n    axios.interceptors.response.use(\n        response => {\n            // If the login is failed then throw error\n            if (response.data.error) {\n                console.log(\"Login Failed \");\n                throw new Error(\"Login Failed \");\n            }\n\n            return response;\n        },\n        error => {\n            console.log(\"ERROR IN RESPONSE :: \", error.request.status, error);\n            if (error.request.status === 401) {\n                console.log(\"Token is invalid. Force logout the user\");\n                // Token is invalid. Force logout the user\n                /*store.dispatch({\n                    type: DELETE_TOKEN_FROM_PERSISTENCE,\n                });*/\n                return;\n            }\n            return Promise.reject(error);\n        }\n    );\n};\n","import React from \"react\";\n\ninterface IRatingProps {\n    label: string,\n    value: number\n}\n\nconst RATING_GOOD_AVG = 5;\nconst RATING_OKAY_AVG = 2;\n\nconst Rating = (props: IRatingProps) => {\n    const color = props.value > RATING_GOOD_AVG\n        ? \"green\"\n        : (\n            props.value > RATING_OKAY_AVG ? \"orange\" : \"red\"\n        );\n    return (\n        <div className={\"d-flex direction-col rating\"}>\n            <div style={{\n                borderColor: color,\n                color\n            }}>{props.value}</div>\n            <div>{props.label}</div>\n        </div>\n    )\n};\n\nexport default Rating;\n","import React from \"react\";\nimport Rating from \"./Rating\";\nimport \"./header.scss\";\nimport {connect} from \"react-redux\";\nimport {STORE_KEYS, WINDOW_REDUCER_KEYS} from \"../../reducers\";\n\ninterface IHeaderProps {\n    img: string,\n    restaurantName: string,\n    location: string,\n    rating: {\n        speed: number,\n        flavor: number,\n        offer: number\n    },\n    info: {\n        one: string,\n        two: string,\n        three: string\n    },\n    isUserFavorite: boolean,\n    isWindowSmall: boolean\n}\n\nconst SPEED_LABEL = \"Speed\";\nconst FLAVOR_LABEL = \"Flavor\";\nconst OFFER_LABEL = \"Offer\";\n\nconst INFO_ONE = \"Info 1\";\nconst INFO_TWO = \"Info 2\";\nconst INFO_THREE = \"Info 3\";\n\nconst RestaurantHeader = (props: IHeaderProps) => {\n\n    const { isWindowSmall } = props;\n\n    return (\n        <React.Fragment>\n            <div className={\"d-flex-card\"}>\n                <img src={props.img} alt={props.restaurantName} />\n                <div className={\"flex-1 d-flex direction-col\"}>\n                    <div className={\"d-flex direction-row align-center justify-space-between\"}>\n                        <div className={\"header-container\"}>\n                            <div className={\"header\"}>{props.restaurantName}</div>\n                            <div className={\"subtitle\"}>{props.location}</div>\n                        </div>\n                        <div>\n                            <button onClick={() => {}}> Favorite </button>\n                            <button onClick={() => {}}> Share </button>\n                            <button onClick={() => {}}> Like </button>\n                        </div>\n                    </div>\n                    <div className={\"d-flex direction-row align-center\"}>\n                        <div className={\"d-flex direction-row align-center rating-container\"}>\n                            <Rating label={SPEED_LABEL} value={props.rating.speed}/>\n                            <Rating label={FLAVOR_LABEL} value={props.rating.flavor}/>\n                            <Rating label={OFFER_LABEL} value={props.rating.offer}/>\n                        </div>\n                        {!isWindowSmall && (\n                            <div className={\"d-flex direction-row align-center border-box\"}>\n                                <div>\n                                    <div>{props.info.one}</div>\n                                    <div>{INFO_ONE}</div>\n                                </div>\n                                <div>\n                                    <div>{props.info.two}</div>\n                                    <div>{INFO_TWO}</div>\n                                </div>\n                                <div>\n                                    <div>{props.info.three}</div>\n                                    <div>{INFO_THREE}</div>\n                                </div>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n            <div id={\"xs-border-box\"} className={\"d-flex direction-row align-center border-box\"}>\n                {isWindowSmall && (\n                    <React.Fragment>\n                        <div>\n                            <div>{props.info.one}</div>\n                            <div>{INFO_ONE}</div>\n                        </div>\n                        <div>\n                            <div>{props.info.two}</div>\n                            <div>{INFO_TWO}</div>\n                        </div>\n                        <div>\n                            <div>{props.info.three}</div>\n                            <div>{INFO_THREE}</div>\n                        </div>\n                    </React.Fragment>\n                )}\n            </div>\n        </React.Fragment>\n    )\n};\n\nexport default connect(\n    (store: any) => ({\n        isWindowSmall: store[STORE_KEYS.WINDOW_STORE][WINDOW_REDUCER_KEYS.IS_WINDOW_SMALL]\n    })\n)(RestaurantHeader);\n","import React from \"react\";\nimport \"./breadcrumb.scss\";\n\ninterface IBreadcrumbProps {\n\n}\n\nconst Breadcrumb = (props: IBreadcrumbProps) => {\n    return (\n      <div className={\"breadcrumb\"}>\n          <i className={\"fa fa-home\"} />\n          <span>Tamil Nadu</span>\n          <span>/</span>\n          <span>Chennai</span>\n          <span>/</span>\n          <span>Pizzas</span>\n      </div>\n    );\n};\n\nexport default Breadcrumb;\n","import React from \"react\";\nimport {IMenuItem} from \"./menuTypes\";\n\ninterface IMenuItemProps {\n    item: IMenuItem\n}\n\nconst MenuItem = (props: IMenuItemProps) => {\n    const { item } = props;\n    return (\n        <div className={\"menu-item\"}>\n            <div>\n                <div>{item.name}</div>\n                <div>{item.description}</div>\n            </div>\n            <div>\n                <span> {item.rate} </span>\n                <button>+</button>\n            </div>\n        </div>\n    )\n};\n\nexport default MenuItem;\n","import React from \"react\";\nimport {IMenuCategory, IMenuItem} from \"./menuTypes\";\nimport MenuItem from \"./MenuItem\";\n\ninterface IMenuCategoryProps {\n    category: IMenuCategory\n}\n\nconst MenuCategory = (props: IMenuCategoryProps) => {\n    const { category } = props;\n    return (\n        <div className={\"menu-category\"}>\n            <div>\n                {category.name}\n                <i className={\"fa fa-angle-down\"}/>\n            </div>\n            {category.items.map((item: IMenuItem) => (\n                <MenuItem item={item} />\n            ))}\n        </div>\n    )\n};\n\nexport default MenuCategory;\n","import React from \"react\";\nimport MenuCategory from \"./MenuCategory\";\nimport {IMenuCategory} from \"./menuTypes\";\nimport \"./menu.scss\";\n\nconst menu: IMenuCategory[] = [\n    {\n        name: \"Category 1\",\n        items: [\n            {\n                name: \"Item 1\",\n                description: \"Lorem Ipsum\",\n                rate: \"19.90 TL\"\n            },\n            {\n                name: \"Item 2\",\n                description: \"Lorem Ipsum\",\n                rate: \"19.90 TL\"\n            },\n            {\n                name: \"Item 3\",\n                description: \"Lorem Ipsum\",\n                rate: \"19.90 TL\"\n            },\n            {\n                name: \"Item 4\",\n                description: \"Lorem Ipsum\",\n                rate: \"19.90 TL\"\n            }\n        ]\n    },\n    {\n        name: \"Category 2\",\n        items: [\n            {\n                name: \"Item 1\",\n                description: \"Lorem Ipsum\",\n                rate: \"28.90 TL\"\n            },\n            {\n                name: \"Item 2\",\n                description: \"Lorem Ipsum\",\n                rate: \"28.90 TL\"\n            }\n        ]\n    }\n];\n\nconst RestaurantMenu = (props: {}) => {\n    return (\n        <div className={\"menu-container\"}>\n            {menu.map((category: IMenuCategory) => (\n                <MenuCategory category={category} />\n            ))}\n        </div>\n    );\n};\n\nexport default RestaurantMenu;\n","import React from \"react\";\n\ninterface ICounterProps {\n    currentCount: number,\n    onChange: (count: number) => void\n}\n\nconst Counter = (props: ICounterProps) => {\n    return (\n        <React.Fragment>\n            <div>\n                {props.currentCount}\n            </div>\n            <div>\n                <button> + </button><br/>\n                <button> - </button>\n            </div>\n        </React.Fragment>\n    )\n};\n\nexport default Counter;\n","import React from \"react\";\nimport {ICartItem} from \"./cartTypes\";\nimport Counter from \"./Counter\";\n\ninterface ICartItemProps {\n    item: ICartItem\n}\n\nconst PRICE_UNIT = \"TL\";\n\nconst CartItem = (props: ICartItemProps) => {\n    const { item } = props;\n    return (\n        <div className={\"card-item\"}>\n            <div className={\"d-flex flex-row align-center\"}>\n                <div className={\"counter\"}>\n                    <Counter currentCount={item.quantity} onChange={() => {}}/>\n                </div>\n                <div className={\"item-details\"}>\n                    <div>{item.name}</div>\n                    <div>{item.description}</div>\n                </div>\n            </div>\n            <div className={\"cart-action\"}>\n                <div>{`${item.price} ${PRICE_UNIT}`}</div>\n                <div><i className={\"fa fa-times-circle-o\"} /></div>\n            </div>\n        </div>\n    )\n};\n\nexport default CartItem;\n","import React from \"react\";\nimport {ICartItem} from \"./cartTypes\";\nimport CartItem from \"./CartItem\";\nimport \"./cart.scss\";\n\nconst cartItems: ICartItem[] = [\n    {\n        name: \"Item 1\",\n        description: \"Lorem Ipsum\",\n        quantity: 2,\n        price: 9.90\n    },\n    {\n        name: \"Item 2\",\n        description: \"Lorem Ipsum\",\n        quantity: 2,\n        price: 19.90\n    },\n    {\n        name: \"Item 3\",\n        description: \"Lorem Ipsum\",\n        quantity: 1,\n        price: 4.90\n    }\n];\n\nconst CART_TITLE = \"Cart\";\nconst CART_TOTAL = \"Total\";\nconst CHECKOUT = \"Checkout\";\n\nconst Cart = (props: {}) => {\n    return (\n      <div className={\"cart-container\"}>\n          <div className={\"cart-title\"}>\n              {CART_TITLE}\n          </div>\n          <div className={\"cart-items\"}>\n              {cartItems.map((cartItem: any) => (\n                  <CartItem item={cartItem}/>\n              ))}\n          </div>\n          <div className={\"cart-title\"}>\n              {CART_TOTAL}\n          </div>\n          <div className={\"cart-footer\"}>\n              {CHECKOUT}\n          </div>\n      </div>\n    );\n};\n\nexport default Cart;\n","import React from \"react\";\nimport {Redirect, Route, Switch} from \"react-router\";\nimport RestaurantMenu from \"../RestaurantMenu\";\nimport {connect} from \"react-redux\";\nimport {STORE_KEYS, WINDOW_REDUCER_KEYS} from \"../../reducers\";\nimport Cart from \"../Cart\";\n\ninterface ITabContentProps {\n    isWindowSmall: boolean,\n    isWindowMedium: boolean\n}\n\nconst CART_TOTAL = \"Total\";\nconst PRICE_UNIT = \"TL\";\n\nconst TabContent = (props: ITabContentProps) => {\n    const { isWindowSmall, isWindowMedium } = props;\n    const hideCart = isWindowMedium || isWindowSmall;\n    return (\n        <div className={\"d-flex flex-row\"}>\n            <div className={\"flex-2\"}>\n                <Switch>\n                    <Route exact path=\"/tab1\">\n                        <RestaurantMenu/>\n                    </Route>\n                    <Route exact path=\"/tab2\">\n                        <div/>\n                    </Route>\n                    <Route exact path=\"/tab3\">\n                        <div/>\n                    </Route>\n                    <Route exact path=\"/tab4\">\n                        <div/>\n                    </Route>\n                    <Route path=\"*\">\n                        <Redirect to={\"/tab1\"}/>\n                    </Route>\n                </Switch>\n            </div>\n            {!hideCart && (\n                <div className={\"flex-1\"}>\n                    <Cart/>\n                </div>\n            )}\n            {hideCart && (\n                <div className={\"floating-cart\"}>\n                    <i className={\"fa fa-shopping-cart\"} />\n                    <div>\n                        <div>{CART_TOTAL}</div>\n                        <div>{`50.00 ${PRICE_UNIT}`}</div>\n                    </div>\n                </div>\n            )}\n        </div>\n    )\n};\n\nexport default connect(\n    (store: any) => ({\n        isWindowSmall: store[STORE_KEYS.WINDOW_STORE][WINDOW_REDUCER_KEYS.IS_WINDOW_SMALL],\n        isWindowMedium: store[STORE_KEYS.WINDOW_STORE][WINDOW_REDUCER_KEYS.IS_WINDOW_MEDIUM]\n    })\n)(TabContent);\n","import React from \"react\";\nimport {BrowserRouter as Router, NavLink, Redirect, Route, Switch} from \"react-router-dom\";\nimport \"./tabRouter.scss\";\nimport RestaurantMenu from \"../RestaurantMenu\";\nimport TabContent from \"./TabContent\";\n\nconst TabRouter = (props: {}) => {\n    return (\n        <Router>\n            <div>\n                <div className={\"tab-container\"}>\n                    <NavLink activeClassName={\"active\"} to=\"/tab1\">Tab 1</NavLink>\n                    <NavLink activeClassName={\"active\"} to=\"/tab2\">Tab 2</NavLink>\n                    <NavLink activeClassName={\"active\"} to=\"/tab3\">Tab 3</NavLink>\n                    <NavLink activeClassName={\"active\"} to=\"/tab4\">Tab 4</NavLink>\n                </div>\n                <div className={\"tab-content\"}>\n                    <TabContent/>\n                </div>\n            </div>\n        </Router>\n    )\n};\n\nexport default TabRouter;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport RestaurantHeader from \"./RestaurantHeader\";\nimport \"./detail.scss\";\nimport Breadcrumb from \"./Breadcrumb\";\nimport {STORE_KEYS, WINDOW_REDUCER_KEYS} from \"../../reducers\";\nimport TabRouter from \"./TabRouter\";\n\ninterface IRestaurantProps {\n    isWindowSmall: boolean,\n}\n\nconst DETAIL = {\n    img: \"https://www.qsrmagazine.com/sites/default/files/styles/story_page/public/PizzaHut.jpg?itok=8m3Mf8Bf\",\n    restaurantName: \"Pizza Hut\",\n    location: \"Chennai, India\",\n    rating: {\n        speed: 5,\n        flavor: 9,\n        offer: 10\n    },\n    info: {\n        one: \"25 TL\",\n        two: \"45 dk\",\n        three: \"09:00 - 22:00\"\n    }\n};\n\nconst RestaurantDetail = (props: IRestaurantProps) => {\n    const { isWindowSmall } = props;\n    return (\n        <div>\n            {!isWindowSmall && (\n                <Breadcrumb />\n            )}\n            <RestaurantHeader\n                img={DETAIL.img}\n                restaurantName={DETAIL.restaurantName}\n                location={DETAIL.location}\n                rating={DETAIL.rating}\n                info={DETAIL.info}\n                isUserFavorite={true}\n            />\n            <TabRouter/>\n        </div>\n    )\n};\n\nexport default connect(\n    (store: any) => ({\n        isWindowSmall: store[STORE_KEYS.WINDOW_STORE][WINDOW_REDUCER_KEYS.IS_WINDOW_SMALL]\n    })\n)(RestaurantDetail);\n","import React, {useEffect} from \"react\";\nimport { connect } from \"react-redux\";\nimport fullLogo from \"../../assets/uber-eats-logo.png\";\nimport mobileLogo from \"../../assets/eats-logo.png\";\nimport \"./appHeader.scss\";\nimport {resizeWindow} from \"../../actions/windowAction\";\nimport {ActionInterface} from \"../../actions/action\";\nimport {STORE_KEYS, WINDOW_REDUCER_KEYS} from \"../../reducers\";\n\ninterface IAppHeaderProps {\n    isWindowSmall: boolean,\n    resizeWindow: (width: number) => ActionInterface\n}\n\nconst AppHeader = (props: IAppHeaderProps) => {\n\n    const { isWindowSmall, resizeWindow } = props;\n\n    function windowResize() {\n        resizeWindow(window.outerWidth);\n    }\n\n    useEffect(() => {\n        window.addEventListener(\"resize\", windowResize);\n        return () => {\n            window.removeEventListener(\"resize\", windowResize);\n        }\n    });\n\n    console.log({ isWindowSmall });\n    return (\n        <div className={\"app-header\"}>\n            {isWindowSmall\n                ? <img src={mobileLogo} alt={\"uber-eats\"} />\n                : <img src={fullLogo} alt={\"uber-eats\"} />}\n        </div>\n    );\n};\n\nexport default connect(\n    (store: any) => ({\n        isWindowSmall: store[STORE_KEYS.WINDOW_STORE][WINDOW_REDUCER_KEYS.IS_WINDOW_SMALL]\n    }),\n    {\n        resizeWindow\n    }\n)(AppHeader);\n","import {WINDOW_RESIZE} from \"../constants/windowConstants\";\n\nexport const resizeWindow = (width: number) => ({\n    type: WINDOW_RESIZE,\n    payload: {\n        width\n    }\n});\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Routes from \"./Routes\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport {setupInterceptors} from \"./interceptors\";\nimport RestaurantDetail from \"./containers/RestaurantDetail\";\nimport \"./css/font-awesome.min.css\";\nimport AppHeader from \"./containers/AppHeader\";\n\nsetupInterceptors();\n\nconst App: React.FC = () => {\n  return (\n      <Provider store={store}>\n        <div className=\"App\">\n          {/*<header className=\"App-header\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <p>\n              Edit <code>src/App.tsx</code> and save to reload.\n            </p>\n            <a\n              className=\"App-link\"\n              href=\"https://reactjs.org\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Learn React\n            </a>\n          </header>*/}\n          <AppHeader/>\n          <RestaurantDetail />\n        </div>\n      </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}